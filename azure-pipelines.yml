trigger:
  - master

pool:
  vmImage: ubuntu-latest

steps:
  # Java tool installer v0
  # Acquire a specific version of Java from a user-supplied Azure blob or the tool cache and sets JAVA_HOME.
  - task: JavaToolInstaller@0
    inputs:
      versionSpec: '8' # string. Required. JDK version. Default: 8.
      jdkArchitectureOption:  'x64' #| 'x86'. Required. JDK architecture.
      jdkSourceOption: 'PreInstalled' # '| 'LocalDirectory' | 'PreInstalled'. Required. JDK source.
      #jdkFile: # string. Required when jdkSourceOption == LocalDirectory. JDK file.
      #azureResourceManagerEndpoint: # string. Required when jdkSourceOption == AzureStorage. Azure subscription.
      #azureStorageAccountName: # string. Required when jdkSourceOption == AzureStorage. Storage account name.
      #azureContainerName: # string. Required when jdkSourceOption == AzureStorage. Container name.
      #azureCommonVirtualFile: # string. Required when jdkSourceOption == AzureStorage. Common virtual path.
      #jdkDestinationDirectory: # string. Required when jdkSourceOption != PreInstalled. Destination directory.
      #azureResourceGroupName: # string. Optional. Use when jdkSourceOption == AzureStorage. Resource Group name.
      #cleanDestinationDirectory: true # boolean. Optional. Use when jdkSourceOption != PreInstalled. Clean destination directory. Default: true.
      #createExtractDirectory: true # boolean. Optional. Use when jdkSourceOption != PreInstalled. Create directory for extracting. Default: true.
  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'Path'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'package'

  # Copy the JAR/WAR file to the artifact staging directory
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/target'
      Contents: '**/*.jar'  # Adjust for WAR files if needed
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  # Publish the artifact
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'drop'
